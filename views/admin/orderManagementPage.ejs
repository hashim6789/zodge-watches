<!DOCTYPE html>
<html lang="en">
  <head>
    <!-- Required meta tags -->
    <meta charset="utf-8" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, shrink-to-fit=no"
    />
    <title>Admin Demo</title>
    <!-- plugins:css -->
    <link
      rel="stylesheet"
      href="/public/assets/vendors/mdi/css/materialdesignicons.min.css"
    />
    <link
      rel="stylesheet"
      href="/public/assets/vendors/css/vendor.bundle.base.css"
    />
    <!-- endinject -->
    <!-- Plugin css for this page -->
    <!-- End Plugin css for this page -->
    <!-- inject:css -->
    <!-- endinject -->
    <!-- Layout styles -->
    <link rel="stylesheet" href="/public/assets/css/style.css" />
    <!-- End layout styles -->
    <link rel="shortcut icon" href="/public/assets/images/favicon.png" />
  </head>
  <body>
    <div class="container-scroller">
      <!-- partial:partials/_sidebar.ejs -->
      <%- include('partials/_sidebar') %>
      <!-- partial -->
      <div class="container-fluid page-body-wrapper">
        <!-- partial:partials/_navbar.ejs -->
        <%- include('partials/_navbar',{pageType:"order"}) %>
        <!-- partial -->
        <div class="main-panel">
          <div class="content-wrapper">
            <a href="/admin/dashboard">Admin</a> >
            <a href="/admin/orders">Order Management</a>
            <div class="row">
              <div class="col-12 grid-margin">
                <div class="card">
                  <div class="card-body">
                    <div
                      class="d-flex justify-content-between align-items-center mb-4"
                    >
                      <h4 class="card-title">Order Management</h4>
                      <!-- <button
                        class="btn btn-success"
                        data-toggle="modal"
                        data-target="#createOrderModal"
                      >
                        Create New Order
                      </button> -->
                    </div>
                    <div class="table-responsive">
                      <table class="table">
                        <thead>
                          <tr>
                            <th>SI</th>
                            <th>Order Date</th>
                            <th>Order ID</th>
                            <th>Customer</th>
                            <th>Total Price</th>
                            <th>Status</th>
                            <th>Return</th> <!-- New column for Return Status -->
                            <th>Payment Method</th>
                            <th>Action</th>
                          </tr>
                        </thead>
                        <tbody>
                          <% orders.forEach((order, index) => { %>
                          <tr>
                            <td><%= index+1 %></td>
                            <td><%= new Date(order.createdAt).toLocaleDateString() %></td>
                            <td><%= order.orderId %></td>
                            <td><%= order.address.firstName %></td>
                            <td>$<%= order.totalPrice.toFixed(2) %></td>
                            <td><%= order.orderStatus %></td>
                            <td>
                              <% if (order.returnDetails.returnStatus) { %>
                                <% if (order.returnDetails.returnStatus === 'requested') { %>
                                  <span class="badge badge-warning">Requested</span>
                                <% } else if (order.returnDetails.returnStatus === 'approved') { %>
                                  <span class="badge badge-success">Approved</span>
                                <% } else if (order.returnDetails.returnStatus === 'rejected') { %>
                                  <span class="badge badge-danger">Rejected</span>
                                <% } else if (order.returnDetails.returnStatus === 'completed') { %>
                                  <span class="badge badge-primary">Completed</span>
                                <% } %>
                              <% } else { %>
                                <span class="badge badge-info">N/A</span>
                              <% } %>
                            </td>
                            <td><%= order.paymentMethod %></td>
                            <td>
                              <button
                                class="btn btn-info"
                                data-toggle="modal"
                                data-target="#viewOrderModal"
                                onclick="viewOrderDetails('<%= order._id %>')"
                                <% if (order.orderStatus === 'Requested') { %> 
                                  data-notification="Order is in 'Requested' status" 
                                  class="btn btn-info btn-warning"
                                <% } %>
                              >
                                View
                              </button>
                            </td>
                          </tr>
                          <% }) %>
                        </tbody>
                      </table>
                    </div>
                    
                  </div>
                </div>
              </div>
            </div>
            <!-- Pagination -->
            <nav aria-label="Page navigation">
              <ul class="pagination justify-content-center">
                <% if (current > 1) { %>
                <li class="page-item">
                  <a
                    class="page-link"
                    href="?page=<%= current - 1 %>"
                    aria-label="Previous"
                  >
                    <span aria-hidden="true">&laquo;</span>
                  </a>
                </li>
                <% } %> <% for (let i = 1; i <= pages; i++) { %>
                <li class="page-item <%= current == i ? 'active' : '' %>">
                  <a class="page-link" href="?page=<%= i %>"><%= i %></a>
                </li>
                <% } %> <% if (current < pages) { %>
                <li class="page-item">
                  <a
                    class="page-link"
                    href="?page=<%= ++current %>"
                    aria-label="Next"
                  >
                    <span aria-hidden="true">&raquo;</span>
                  </a>
                </li>
                <% } %>
              </ul>
            </nav>
          </div>

          <!-- Order Details Modal -->
          <div
            class="modal fade"
            id="viewOrderModal"
            tabindex="-1"
            role="dialog"
            aria-labelledby="viewOrderModalLabel"
            aria-hidden="true"
          >
            <div class="modal-dialog modal-lg" role="document">
              <div class="modal-content">
                <!-- Modal Header -->
                <div class="modal-header">
                  <h5 class="modal-title" id="viewOrderModalLabel">
                    Order Details
                  </h5>
                  <button
                    type="button"
                    class="close"
                    data-dismiss="modal"
                    aria-label="Close"
                  >
                    <span aria-hidden="true">&times;</span>
                  </button>
                </div>

                <!-- Modal Body -->
                <div class="modal-body">
                  <!-- Order Details Section -->
                  <div class="card mb-4">
                    <div class="card-header bg-warning text-white">
                      Order Details
                    </div>
                    <div class="card-body">
                      <div class="row">
                        <div class="col-md-6">
                          <p>
                            <strong>Order ID:</strong>
                            <span id="modalOrderId"></span>
                          </p>
                        </div>
                        <div class="col-md-6">
                          <p>
                            <strong>User Name:</strong>
                            <span id="modalUserName"></span>
                          </p>
                        </div>
                      </div>

                      <div class="row">
                        <div class="col-md-6">
                          <p>
                            <strong>Customer Name:</strong>
                            <span id="modalCustomerName"></span>
                          </p>
                        </div>
                        <div class="col-md-6">
                          <p>
                            <strong>Order Date:</strong>
                            <span id="modalOrderDate"></span>
                          </p>
                        </div>
                      </div>

                      <div class="row">
                        <div class="col-md-6">
                          <p>
                            <strong>Shipping Address:</strong>
                            <span id="modalShippingAddress"></span>
                          </p>
                        </div>
                        <div class="col-md-6">
                          <p>
                            <strong>Payment Method:</strong>
                            <span id="modalPaymentMethod"></span>
                          </p>
                        </div>
                      </div>

                      <div class="row">
                        <div class="col-md-6">
                          <p>
                            <strong>Return Status:</strong>
                            <span id="modalReturnStatus"></span>
                          </p>
                        </div>
                        <div class="col-md-6">
                          <p>
                            <strong>Return Reason:</strong>
                            <span id="modalReturnReason"></span>
                          </p>
                        </div>
                      </div>

                      <!-- Order Status Section -->
                      <div class="row">
                        <div class="col-md-12">
                          <p>
                            <strong>Order Status:</strong>
                            <span id="modalOrderStatus">Placed</span>
                          </p>
                          <div id="orderStatusButtons">
                            <!-- Buttons will be inserted dynamically by JavaScript -->
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>

                  <!-- Order Items Section -->
                  <h5 class="mb-3">Order Items</h5>
                  <div class="table-responsive">
                    <table class="table table-bordered">
                      <thead class="thead-light">
                        <tr>
                          <th>SI</th>
                          <th>Product Name</th>
                          <th>Image</th>
                          <th>Quantity</th>
                          <th>Price</th>
                        </tr>
                      </thead>
                      <tbody id="modalOrderItemsTable">
                        <!-- JavaScript dynamically populates this table body -->
                      </tbody>
                    </table>
                  </div>
                </div>

                <!-- Modal Footer -->
                <div class="modal-footer">
                  <button
                    type="button"
                    class="btn btn-secondary"
                    data-dismiss="modal"
                  >
                    Close
                  </button>
                </div>
              </div>
            </div>
          </div>

          <!-- content-wrapper ends -->
          <!-- partial:partials/_footer.ejs -->
          <%- include('partials/_footer') %>
          <!-- partial -->
        </div>
        <!-- main-panel ends -->
      </div>
      <!-- page-body-wrapper ends -->
    </div>
    <!-- container-scroller -->
    <!-- partial:partials/_scripts.ejs -->
    <%- include('partials/_scripts') %>
    <!-- partial -->

    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

    <script></script>

    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script>
      function viewOrderDetails(orderId) {
        axios
          .get(`/admin/orders/${orderId}`)
          .then(function (response) {
            const order = response.data.data.order;
            const address = order.address;

            const addressHTML = `
          <br>
          ${address.flatNo ? address.flatNo + ", " : ""}${
              address.addressLine
            }, <br>
          ${address.city}, ${address.state}, ${address.pincode}, <br>
          ${address.country} <br>
          Phone: ${address.phoneNo} <br>
          Email: ${address.email}
        `;

            document.getElementById("modalOrderId").textContent = order._id;
            document.getElementById("modalUserName").textContent = `${
              order.userId.firstName
            } ${order.userId.lastName || ""}`;
            document.getElementById(
              "modalCustomerName"
            ).textContent = `${address.firstName} ${address.lastName}`;
            document.getElementById("modalOrderDate").textContent =
              order.createdAt;
            document.getElementById("modalShippingAddress").innerHTML =
              addressHTML;
            document.getElementById("modalPaymentMethod").textContent =
              order.paymentMethod;
            document.getElementById("modalReturnStatus").textContent = `${
              order.returnDetails.returnStatus || "Not requested"
            }`;
            document.getElementById("modalReturnReason").textContent = `${
              order.returnDetails.returnReason || "Not requested"
            }`;

            const itemsTableBody = document.getElementById(
              "modalOrderItemsTable"
            );
            if (itemsTableBody) {
              itemsTableBody.innerHTML = "";

              if (order && Array.isArray(order.products)) {
                order.products.forEach((item, index) => {
                  const row = document.createElement("tr");
                  row.innerHTML = `
                <td>${index + 1}</td>
                <td>${item.productId.name}</td>
                <td><img src="/public/uploads/${
                  item.productId.images[0]
                }" alt="${
                    item.productName
                  }" style="width: 50px; height: auto;"></td>
                <td>${item.quantity}</td>
                <td>${item.price.toFixed(2)}</td>
              `;
                  itemsTableBody.appendChild(row);
                });
              } else {
                console.warn("order.products is not defined or not an array.");
              }
            } else {
              console.warn(
                "Table body element with ID 'modalOrderItemsTable' not found."
              );
            }

            const currentStatus = order.orderStatus;
            initializeOrderStatusButtons(order._id, currentStatus);

            $("#viewOrderModal").modal("show");
          })
          .catch(function (error) {
            console.error("Error fetching order details:", error);
            alert("Failed to fetch order details.");
          });
      }

      // Function to initialize the status buttons based on the current order status
      function initializeOrderStatusButtons(orderId, currentStatus) {
        const orderStatusElement = document.getElementById("modalOrderStatus");
        const orderStatusButtons =
          document.getElementById("orderStatusButtons");

        orderStatusElement.textContent = currentStatus;

        orderStatusButtons.innerHTML = "";

        const returnStatus =
          document.getElementById("modalReturnStatus").textContent;
        if (currentStatus === "placed") {
          createStatusButton("shipped", orderId, orderStatusButtons);
          createStatusButton("cancelled", orderId, orderStatusButtons);
        } else if (currentStatus === "shipped") {
          createStatusButton("delivered", orderId, orderStatusButtons);
          createStatusButton("cancelled", orderId, orderStatusButtons);
        } else if (currentStatus === "delivered") {
          initializeReturnStatusButtons(orderId, returnStatus);
        }
      }

      // Function to create a button with an event listener for updating status
      function createStatusButton(status, orderId, container) {
        const button = document.createElement("button");
        button.className = "btn btn-outline-warning mr-2";
        button.textContent = status;

        button.addEventListener("click", () => {
          updateOrderStatus(orderId, status);
        });

        container.appendChild(button);
      }

      // Function to update order status via Axios patch request
      function updateOrderStatus(orderId, newStatus) {
        axios
          .patch(`/admin/orders/change-status/${orderId}`, {
            status: newStatus,
          })
          .then((response) => {
            const updatedStatus = response.data.status;
            initializeOrderStatusButtons(orderId, updatedStatus);
          })
          .catch((error) => {
            console.error("Error updating order status:", error);
          });
      }

      //for returnStatus
      function initializeReturnStatusButtons(orderId, returnStatus) {
        console.log(orderId, returnStatus);
        const returnStatusElement =
          document.getElementById("modalReturnStatus");
        const returnReasonElement =
          document.getElementById("modalReturnReason");
        const returnStatusButtons = document.createElement("div");
        const completeButton = document.createElement("div");

        returnStatusElement.textContent = returnStatus;

        returnReasonElement.innerHTML =
          returnReasonElement.innerHTML.split("<div")[0];

        if (returnStatus === "requested") {
          returnStatusButtons.id = "returnStatusButtons";
          returnStatusButtons.className = "mt-3";

          createReturnButton(
            "Approve",
            orderId,
            "approved",
            returnStatusButtons
          );
          createReturnButton(
            "Reject",
            orderId,
            "rejected",
            returnStatusButtons
          );

          returnReasonElement.appendChild(returnStatusButtons);
        } else if (returnStatus === "approved") {
          returnStatusButtons.id = "returnStatusButtons";
          returnStatusButtons.className = "mt-3";

          createReturnButton(
            "Completed",
            orderId,
            "completed",
            returnStatusButtons
          );
          returnReasonElement.appendChild(returnStatusButtons);
        }
      }

      // Function to create a button with an event listener for handling return requests
      function createReturnButton(action, orderId, status, container) {
        console.log(action, orderId, status, container);
        const button = document.createElement("button");
        let className = "";

        // Mapping actions to Bootstrap button classes
        if (action === "Approve") {
          className = "success"; // btn-success for green
        } else if (action === "Reject") {
          className = "danger"; // btn-danger for red
        } else if (action === "Completed") {
          className = "primary"; // Use a more visible color, e.g., btn-primary for blue
        }

        button.className = `btn btn-${className} mr-2`;
        button.textContent = action;

        button.addEventListener("click", () => {
          handleReturnRequest(orderId, status);
        });

        container.appendChild(button);
      }

      // Function to handle return requests via Axios POST request
      function handleReturnRequest(orderId, status) {
        axios
          .patch(`/admin/orders/handle-return/${orderId}`, {
            returnStatus: status,
          })
          .then((response) => {
            const updatedReturnStatus =
              response.data.order.returnDetails.returnStatus;
            //for changing the order status filed of the modal
            document.getElementById("modalOrderStatus").textContent =
              response.data.order.orderStatus;
            alert(`Return has been ${updatedReturnStatus} successfully.`);
            initializeReturnStatusButtons(orderId, updatedReturnStatus);
          })
          .catch((error) => {
            console.error("Error handling return request:", error);
            alert("Failed to process return request. Please try again.");
          });
      }
    </script>
  </body>
</html>
