<!DOCTYPE html>
<html lang="en">
  <head>
    <title>Home</title>
    <%- include('partials/_header') %>
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, shrink-to-fit=no"
    />
    <link
      href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script
      src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"
      integrity="sha384-IQsoLXl5PILFhosVNubq5LC7Qb9DXgDA9i+tQ8Zj3iwWAwPtgFTxbJ8NT4GN1R8p"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.min.js"
      integrity="sha384-cVKIPhGWiC2Al4u+LWgxfKTRIcfu0JTxR+EQDz/bgldoEyl4H0zUF0QKbrJ0EcQF"
      crossorigin="anonymous"
    ></script>
  </head>
  <body class="animsition">
    <!-- Header -->
    <%- include('partials/_navbar', {user, wishlist, cart}) %>

    <!-- Wishlist -->
    <%- include('partials/_wishlist', {wishlist}) %>

    <!-- Slider -->
    <!-- <%- include('partials/_slide') %> -->

    <!-- Banner put here -->

    <!-- content here -->
    <!-- content here -->
    <!-- <div class="container text-center" style="width: 100%; height: 500px"> -->
    <div class="container-fluid pt-5 mt-5">
      <div class="row">
        <!-- Sidebar for Profile -->
        <nav
          id="sidebar"
          class="col-md-4 col-lg-3 d-md-block bg-light sidebar pt-3"
          style="height: 100vh; overflow-y: auto; position: sticky; top: 0"
        >
          <div class="z-0 p-3">
            <!-- Profile Image -->
            <div class="text-center mb-4">
              <img
                src="/public/user/images/user_logo.png"
                class="rounded-circle"
                alt="Profile Image"
                width="100"
                height="100"
              />
              <h5 class="mt-3">User Name</h5>
            </div>

            <!-- Sidebar Menu -->
            <ul class="nav flex-column">
              <li class="nav-item">
                <a class="nav-link active" href="#personal-info">
                  Personal Information
                </a>
              </li>
              <li class="nav-item">
                <a class="nav-link" href="#address-book">Address Book</a>
              </li>
              <li class="nav-item">
                <a class="nav-link" href="#order-history">Order History</a>
              </li>
              <li class="nav-item">
                <a class="nav-link" href="#change-password">Change Password</a>
              </li>
            </ul>
          </div>
        </nav>

        <!-- Main Content Area -->
        <main class="col-md-8 col-lg-9 px-md-4 ml-auto">
          <!-- Placeholder for dynamic content -->
          <div id="content-area" class="container text-center">
            <!-- Content will be loaded here dynamically -->
          </div>
        </main>
      </div>
    </div>
    <!-- </div> -->
    <!-- content here -->
    <!-- content here -->

    <!-- Modal Structure -->
    <div
      class="modal fade"
      id="editPersonalInfoModal"
      tabindex="-1"
      role="dialog"
      aria-labelledby="editPersonalInfoModalLabel"
      aria-hidden="true"
    >
      <div class="modal-dialog" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="editPersonalInfoModalLabel">
              Edit Personal Information
            </h5>
            <button
              type="button"
              class="close"
              data-dismiss="modal"
              aria-label="Close"
            >
              <span aria-hidden="true">&times;</span>
            </button>
          </div>
          <div class="modal-body">
            <form id="editPersonalInfoForm">
              <div class="form-group">
                <label for="modalFirstName">First Name</label>
                <input
                  type="text"
                  class="form-control"
                  id="modalFirstName"
                  name="firstName"
                  required
                />
              </div>
              <div class="form-group">
                <label for="modalLastName">Last Name</label>
                <input
                  type="text"
                  class="form-control"
                  id="modalLastName"
                  name="lastName"
                  required
                />
              </div>
              <button type="submit" class="btn btn-primary">
                Save Changes
              </button>
            </form>
          </div>
        </div>
      </div>
    </div>

    <!-- Edit Address Modal -->
    <div
      class="modal fade"
      id="editAddressModal"
      tabindex="-1"
      aria-labelledby="editAddressModalLabel"
      aria-hidden="true"
    >
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="editAddressModalLabel">Edit Address</h5>
            <button
              type="button"
              class="btn-close"
              data-bs-dismiss="modal"
              aria-label="Close"
            ></button>
          </div>
          <div class="modal-body">
            <form id="editAddressForm">
              <input type="hidden" name="editAddressId" id="editAddressId" />
              <div class="mb-3">
                <label for="editFirstName" class="form-label">First Name</label>
                <input
                  type="text"
                  class="form-control"
                  id="editFirstName"
                  name="firstName"
                  required
                />
              </div>

              <div class="mb-3">
                <label for="editLastName" class="form-label">Last Name</label>
                <input
                  type="text"
                  class="form-control"
                  id="editLastName"
                  name="lastName"
                  required
                />
              </div>
              <div class="mb-3">
                <label for="editAddressLine" class="form-label"
                  >Address Line</label
                >
                <input
                  type="text"
                  class="form-control"
                  id="editAddressLine"
                  name="addressLine"
                  required
                />
              </div>
              <div class="mb-3">
                <label for="editCity" class="form-label">City</label>
                <input
                  type="text"
                  class="form-control"
                  id="editCity"
                  name="city"
                  required
                />
              </div>
              <div class="mb-3">
                <label for="editState" class="form-label">State</label>
                <input
                  type="text"
                  class="form-control"
                  id="editState"
                  name="state"
                  required
                />
              </div>
              <div class="mb-3">
                <label for="editZip" class="form-label">Zip Code</label>
                <input
                  type="text"
                  class="form-control"
                  id="editZip"
                  name="pincode"
                  required
                />
              </div>
              <div class="mb-3">
                <label for="editCountry" class="form-label">Country</label>
                <input
                  type="text"
                  class="form-control"
                  id="editCountry"
                  name="country"
                  required
                />
              </div>
              <div class="mb-3">
                <label for="editPhoneNo" class="form-label">Phone Number</label>
                <input
                  type="text"
                  class="form-control"
                  id="editPhoneNo"
                  name="phoneNo"
                  required
                />
              </div>
              <div class="mb-3">
                <label for="editFlatNo" class="form-label">Flat Number</label>
                <input
                  type="text"
                  class="form-control"
                  id="editFlatNo"
                  name="flatNo"
                  required
                />
              </div>
              <button type="submit" class="btn btn-primary">
                Save Changes
              </button>
            </form>
          </div>
        </div>
      </div>
    </div>

    <!-- Create Address Modal -->
    <div
      class="modal fade"
      id="createAddressModal"
      tabindex="-1"
      aria-labelledby="createAddressModalLabel"
      aria-hidden="true"
    >
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="createAddressModalLabel">
              Create Address
            </h5>
            <button
              type="button"
              class="btn-close"
              data-bs-dismiss="modal"
              aria-label="Close"
            ></button>
          </div>
          <div class="modal-body">
            <form id="createAddressForm">
              <!-- Fields for Address Creation, similar to the edit modal -->
              <div class="mb-3">
                <label for="createFirstName" class="form-label"
                  >First Name</label
                >
                <input
                  type="text"
                  class="form-control"
                  id="createFirstName"
                  name="firstName"
                  required
                />
              </div>
              <div class="mb-3">
                <label for="createLastName" class="form-label">Last Name</label>
                <input
                  type="text"
                  class="form-control"
                  id="createLastName"
                  name="lastName"
                />
              </div>
              <div class="mb-3">
                <label for="createLastName" class="form-label">Email</label>
                <input
                  type="email"
                  class="form-control"
                  id="createEmail"
                  name="email"
                  required
                />
              </div>
              <div class="mb-3">
                <label for="createAddressLine" class="form-label"
                  >Address Line</label
                >
                <input
                  type="text"
                  class="form-control"
                  id="createAddressLine"
                  name="addressLine"
                  required
                />
              </div>
              <div class="mb-3">
                <label for="createCity" class="form-label">City</label>
                <input
                  type="text"
                  class="form-control"
                  id="createCity"
                  name="city"
                  required
                />
              </div>
              <div class="mb-3">
                <label for="createState" class="form-label">State</label>
                <input
                  type="text"
                  class="form-control"
                  id="createState"
                  name="state"
                  required
                />
              </div>
              <div class="mb-3">
                <label for="createZip" class="form-label">Zip Code</label>
                <input
                  type="text"
                  class="form-control"
                  id="createZip"
                  name="pincode"
                  required
                />
              </div>
              <div class="mb-3">
                <label for="createCountry" class="form-label">Country</label>
                <input
                  type="text"
                  class="form-control"
                  id="createCountry"
                  name="country"
                  required
                />
              </div>
              <div class="mb-3">
                <label for="createPhoneNo" class="form-label"
                  >Phone Number</label
                >
                <input
                  type="text"
                  class="form-control"
                  id="createPhoneNo"
                  name="phoneNo"
                  required
                />
              </div>
              <div class="mb-3">
                <label for="createFlatNo" class="form-label">Flat Number</label>
                <input
                  type="text"
                  class="form-control"
                  id="createFlatNo"
                  name="flatNo"
                  required
                />
              </div>
              <button type="submit" class="btn btn-primary">Add Address</button>
            </form>
          </div>
        </div>
      </div>
    </div>

    <!-- Footer -->
    <%- include('partials/_footer') %>

    <!-- Back to top -->
    <div class="btn-back-to-top" id="myBtn">
      <span class="symbol-btn-back-to-top">
        <i class="zmdi zmdi-chevron-up"></i>
      </span>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="/public/user/js/newProfile.js"></script>

    <!-- <script>
      document.addEventListener("DOMContentLoaded", function () {
        // Handle "Address Book" link click
        document
          .querySelector('a[href="#address-book"]')
          .addEventListener("click", function (event) {
            event.preventDefault(); // Prevent default anchor click behavior

            // Clear existing content
            const mainContent = document.querySelector("main");
            mainContent.innerHTML = `
              <div class="d-flex justify-content-between align-items-center">
                <h2>Address Book</h2>
                <button class="btn btn-primary" id="createAddressButton">Create Address</button>
              </div>
            `; // Set title for Address Book section and add a "Create Address" button

            // Fetch the addresses using Axios
            axios
              .get("/user/profile/api/addresses")
              .then(function (response) {
                const addresses = response.data.data;

                if (addresses.length === 0) {
                  // Display message if no addresses are found
                  const noAddressMessage = document.createElement("p");
                  noAddressMessage.textContent = "There is no address.";
                  mainContent.appendChild(noAddressMessage);
                } else {
                  const addressList = document.createElement("ul"); // Create an unordered list
                  addresses.forEach(function (address) {
                    const listItem = document.createElement("li"); // Create list item for each address
                    listItem.className = "address-item";
                    listItem.id = `address-${address._id}`;

                    // Generate address display
                    listItem.innerHTML = `
                      <div>
                        <h5>${address.firstName} ${address.lastName}</h5>
                        <p>
                          ${address.addressLine}<br />
                          ${address.city}, ${address.state}, ${address.pincode}, ${address.flatNo}<br />
                          ${address.country}<br />
                          <small>${address.phoneNo} <br>${address.email} </small>
                        </p>
                      </div>
                      <button class="btn btn-sm btn-secondary edit-address" data-id="${address._id}">Edit</button>
                      <button class="btn btn-sm btn-danger delete-address" data-id="${address._id}">Delete</button>
                    `;

                    addressList.appendChild(listItem); // Append each list item to the unordered list
                  });

                  mainContent.appendChild(addressList); // Append the address list to the main content area
                }
              })
              .catch(function (error) {
                console.error("Error fetching addresses:", error);
                alert("Failed to load addresses. Please try again.");
              });
          });
      });

      // Event delegation for "Edit" and "Delete" buttons
      document
        .querySelector("main")
        .addEventListener("click", function (event) {
          if (event.target.classList.contains("edit-address")) {
            // Handle "Edit" button click
            const addressId = event.target.getAttribute("data-id");
            openEditAddressModal(addressId);
          } else if (event.target.classList.contains("delete-address")) {
            // Handle "Delete" button click
            const addressId = event.target.getAttribute("data-id");
            deleteAddress(addressId);
          }
        });

      // Function to open edit modal
      function openEditAddressModal(addressId) {
        // Fetch address details using Axios and open modal with pre-filled data
        axios
          .get(`/user/profile/api/address/${addressId}`)
          .then(function (response) {
            const address = response.data.data;
            console.log(address);

            // Populate modal fields
            document.getElementById("editFirstName").value = address.firstName;
            document.getElementById("editAddressId").value = address._id;
            document.getElementById("editLastName").value = address.lastName;
            document.getElementById("editAddressLine").value =
              address.addressLine;
            document.getElementById("editCity").value = address.city;
            document.getElementById("editState").value = address.state;
            document.getElementById("editZip").value = address.pincode; // Assuming address.pincode is the field in your data
            document.getElementById("editCountry").value = address.country;
            document.getElementById("editPhoneNo").value = address.phoneNo; // Assuming address.phoneNo is the field in your data
            document.getElementById("editFlatNo").value = address.flatNo; // Assuming address.flatNo is the field in your data

            // Show modal using Bootstrap 5
            const editModal = new bootstrap.Modal(
              document.getElementById("editAddressModal")
            );
            editModal.show();
          })
          .catch(function (error) {
            console.error("Error fetching address details:", error);
            alert("Failed to load address details. Please try again.");
          });
      }
    </script>

    <script>
      // Event listener for the edit address form submission
      document
        .getElementById("editAddressForm")
        .addEventListener("submit", function (event) {
          event.preventDefault(); // Prevent default form submission

          // Get form data
          const addressData = {
            firstName: document.getElementById("editFirstName").value,
            lastName: document.getElementById("editLastName").value,
            addressLine: document.getElementById("editAddressLine").value,
            city: document.getElementById("editCity").value,
            state: document.getElementById("editState").value,
            pincode: document.getElementById("editZip").value,
            country: document.getElementById("editCountry").value,
            phoneNo: document.getElementById("editPhoneNo").value,
            flatNo: document.getElementById("editFlatNo").value,
          };
          const addressId = document.getElementById("editAddressId").value;

          // Make an Axios PUT request to update the address
          axios
            .put(`/user/profile/api/address/${addressId}`, addressData)
            .then(function (response) {
              // Successfully updated the address
              console.log("Address updated:", response.data.data);

              // Close the modal using Bootstrap 5
              const editModal = bootstrap.Modal.getInstance(
                document.getElementById("editAddressModal")
              );
              editModal.hide();

              // Update the address list dynamically using AJAX
              updateAddressList(response.data.data);

              // Display a success message or any feedback to the user
              alert("Address updated successfully!");
            })
            .catch(function (error) {
              console.error("Error updating address:", error);
              alert("Failed to update address. Please try again.");
            });
        });

      // Function to update the address list dynamically
      function updateAddressList(updatedAddress) {
        // Find the address container or list element
        const addressList = document.getElementById("addressList");

        // Assuming each address is in a <li> element with a unique id attribute
        const addressItem = document.getElementById(
          `address-${updatedAddress._id}`
        );
        console.log(addressItem);

        if (addressItem) {
          // Update the address details inside the <li>
          addressItem.innerHTML = `
              <div>
        <h5>${updatedAddress.firstName} ${updatedAddress.lastName}</h5>
        <p>
          ${updatedAddress.addressLine}<br />
          ${updatedAddress.city}, ${updatedAddress.state}, ${updatedAddress.pincode}, ${updatedAddress.flatNo}<br />
          ${updatedAddress.country}<br />
          <small>${updatedAddress.phoneNo} <br>${updatedAddress.email} </small>
          </p>
      </div>
              <button class="btn btn-sm btn-secondary edit-address" data-id="${updatedAddress._id}">Edit</button>
              <button class="btn btn-sm btn-danger delete-address" data-id="${updatedAddress._id}">Delete</button>
              `;
        }
      } -->
      // Function to delete address
    //   function deleteAddress(addressId) {
    //     if (confirm("Are you sure you want to delete this address?")) {
    //       axios
    //         .delete(`/user/profile/api/address/${addressId}`)
    //         .then(function (response) {
    //           console.log(response);
    //           const addressElement = document.getElementById(
    //             `address-${response.data.data._id}`
    //           );
    //           console.log(addressElement);
    //           if (addressElement) {
    //             addressElement.remove();
    //           }
    //           alert("Address deleted successfully.");
    //         })
    //         .catch(function (error) {
    //           console.error("Error deleting address:", error);
    //           alert("Failed to delete address. Please try again.");
    //         });
    //     }
    //   }
    // </script>

    <!-- <script>
      document.addEventListener("DOMContentLoaded", function () {
        // Event listener for the "Create Address" button
        document
          .getElementById("createAddressButton")
          .addEventListener("click", function () {
            // Show the "Create Address" modal
            $("#createAddressModal").modal("show");
          });

        // Handle "Create Address" form submission
        document
          .getElementById("createAddressForm")
          .addEventListener("submit", function (event) {
            event.preventDefault(); // Prevent default form submission

            const formData = {
              firstName: document.getElementById("createFirstName").value,
              lastName: document.getElementById("createLastName").value,
              addressLine: document.getElementById("createAddressLine").value,
              email: document.getElementById("createEmail").value,
              city: document.getElementById("createCity").value,
              state: document.getElementById("createState").value,
              pincode: document.getElementById("createZip").value,
              country: document.getElementById("createCountry").value,
              phoneNo: document.getElementById("createPhoneNo").value,
              flatNo: document.getElementById("createFlatNo").value,
            };

            axios
              .post("/user/profile/api/address", formData)
              .then(function (response) {
                alert("Address added successfully!");
                $("#createAddressModal").modal("hide"); // Hide the modal after successful addition
                location.reload(); // Reload the page to refresh the address list
              })
              .catch(function (error) {
                console.error("Error creating address:", error);
                alert("Failed to add address. Please try again.");
              });
          });
      });
    </script> -->

    <%- include('partials/_scripts') %>
  </body>
</html>
